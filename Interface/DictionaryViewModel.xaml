<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Stalker_Studio"
                    xmlns:vm="clr-namespace:Stalker_Studio.ViewModel"
                    xmlns:cm="clr-namespace:Stalker_Studio.Common"
                    xmlns:av="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:pt="http://propertytools.org/wpf"
                    xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DictionaryCommands.xaml"/>
        <ResourceDictionary Source="DictionaryInterface.xaml"/>
        <ResourceDictionary Source="DictionaryPropertyGrid.xaml"/>
        <ResourceDictionary Source="DictionaryDesigner.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="DataTemplate_FileViewModel" DataType="{x:Type vm:FileViewModel}">
        <ContentPresenter Content="{Binding}"/>
    </DataTemplate>
    
    <DataTemplate x:Key="DataTemplate_TextFileViewModel" DataType="{x:Type vm:TextFileViewModel}">
        <av:TextEditor SyntaxHighlighting="{Binding HighlightingDefinition}" 
                        Background="{DynamicResource brush_BackgroundContent}" 
                        ShowLineNumbers="True"
                        Document="{Binding Document}" 
                        VirtualizingPanel.IsVirtualizing="True"
                        local:Attached.This="{Binding MainControl, Mode=OneWayToSource}"/>
    </DataTemplate>
    
    <DataTemplate x:Key="DataTemplate_OGFViewModel" DataType="{x:Type vm:OGFViewModel}">
        <WindowsFormsHost Margin="0" local:Attached.This="{Binding MainControl, Mode=OneWayToSource}">
            <wf:PictureBox x:Name="main"/>
        </WindowsFormsHost>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplate_TextureViewModel" DataType="{x:Type vm:TextureViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <ToolBarTray Grid.ColumnSpan="2">
                <ToolBar ItemsSource="{Binding Commands}"  ItemTemplateSelector="{StaticResource CommandDataTemplateSelector}"/>
            </ToolBarTray>
            <Slider Grid.Row="1" Orientation="Vertical"  Minimum="1" Maximum="20" Value="{Binding ZoomValue}" ToolTip="Масштаб"/>
            <ScrollViewer Grid.Column="1" Grid.Row="1" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                          local:Attached.This="{Binding MainControl, Mode=OneWayToSource}">

                <Canvas LayoutTransform="{Binding ScaleTransform}" HorizontalAlignment="Center" VerticalAlignment="Center"
                      local:Attached.This="{Binding FloatControl, Mode=OneWayToSource}">
                    <Image Source="{Binding ImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor"  Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <ContentControl Width="130"
                        MinWidth="50"
                        Height="130"
                        MinHeight="50"
                        Canvas.Top="150"
                        Canvas.Left="470"
                        Style="{StaticResource DesignerItemStyle}"
                        local:Attached.This="{Binding EditControl, Mode=OneWayToSource}"/>
                </Canvas>

            </ScrollViewer>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="dataTemplate_AnyHeader">
        <TextBlock x:Name="Header" Text="{Binding}"/>
    </DataTemplate>
    <DataTemplate x:Key="dataTemplate_FileModelHeader" DataType="{x:Type cm:FileModel}">
        <StackPanel Orientation="Horizontal">
            <TextBox x:Name="RenameableTextBox" Text="{Binding Name}" Margin="0,0" Style="{StaticResource style_RenameableTextBox}"
                     IsReadOnly="True"/>
            <TextBlock x:Name="Extension" Text="{Binding Extension}" Margin="0" Padding="0"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="dataTemplate_NamePropertyHeader">
        <TextBox x:Name="RenameableTextBox" Text="{Binding Name}" Margin="0,0" Style="{StaticResource style_RenameableTextBox}"
                 IsReadOnly="True"/>
    </DataTemplate>

    <local:HeaderDataTemplateSelector x:Key="HeaderDataTemplateSelector" 
                                         FileModel="{StaticResource dataTemplate_FileModelHeader}"
                                         INammed="{StaticResource dataTemplate_NamePropertyHeader}"
                                         Any="{StaticResource dataTemplate_AnyHeader}"/>


    <Style x:Key="style_TextNodeBrowserNode" TargetType="TreeViewItem" BasedOn="{StaticResource style_TreeViewItem}">
        <Setter Property="Visibility" Value="{Binding (local:Attached.CurrentViewModel).TextNodesVisible, 
                                                    RelativeSource={RelativeSource Self}, 
                                                    Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Style>
    <Style x:Key="style_FileBrowserNode" TargetType="TreeViewItem" BasedOn="{StaticResource style_TreeViewItem}">
        <Setter Property="ToolTip" Value="{Binding FullName}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
    </Style>
    
    <local:BrowserNodeStyleSelector x:Key="BrowserNodeStyleSelector" 
                                         FileNode="{StaticResource style_FileBrowserNode}"
                                         TextNode="{StaticResource style_TextNodeBrowserNode}"
                                         Any="{StaticResource style_TreeViewItem}"/>

    
    <HierarchicalDataTemplate x:Key="DataTemplate_Hierarchical" ItemsSource="{Binding Nodes}">
        <StackPanel x:Name="Container" Orientation="Horizontal" Background="Transparent"
                    Tag="{Binding}">
            <StackPanel.ContextMenu>
                <ContextMenu 
                    DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                    local:Attached.CurrentViewModel ="{Binding Path=PlacementTarget.(local:Attached.CurrentViewModel), RelativeSource={RelativeSource Self}}"
                    local:Attached.PreviousViewModel ="{Binding Path=PlacementTarget.(local:Attached.PreviousViewModel), RelativeSource={RelativeSource Self}}"
                    ItemsSource="{Binding Path=PlacementTarget.(local:Attached.CurrentViewModel).ItemCommands, RelativeSource={RelativeSource Self}}"
                    ItemContainerStyleSelector="{StaticResource CommandStyleSelector}"/>
            </StackPanel.ContextMenu>
            <Image Source="{Binding Converter={StaticResource TreeNodeIconConverter}}"/>

            <ContentPresenter x:Name="HeaderPresenter" Margin="4,0"
                              Content="{Binding}" 
                              ContentTemplateSelector="{StaticResource HeaderDataTemplateSelector}"/>
            <ToggleButton x:Name="PinButton" Style="{StaticResource style_IconToggleButton}" Width="14" Height="14" Margin="6,0"
                        Visibility="Hidden"
                        Command="{Binding (local:Attached.CurrentViewModel).FixNodeCommand, RelativeSource={RelativeSource Self}}"
                        CommandParameter="{Binding}">
                <ToggleButton.Resources>
                    <local:DataContextSpy x:Key="Command" DataContext="{Binding Path=(local:Attached.CurrentViewModel).FixNodeCommand, ElementName=Container}"/>
                    <local:DataContextSpy x:Key="CommandParameter" DataContext="{Binding}"/>
                </ToggleButton.Resources>
                <ToggleButton.IsChecked>
                    <local:PathBinding
                        Command="{StaticResource Command}"
                        Converter="{StaticResource IsCheckedToggleButtonConverter}"
                        ConverterParameter="{StaticResource CommandParameter}"
                        Mode="OneWay"/>
                </ToggleButton.IsChecked>
                <Path x:Name="PinImage" Width="12" Height="12" Stretch="Uniform" Fill="{DynamicResource brush_Glyph-50}">
                    <Path.Data>
                        <PathGeometry Figures="M 128,17.475L 130.842,17.475L 130.842,2.91001L 130.842,0.608195L 130.842,0.000223796L 139.593,0.000223796L 145.003,0.000223796L 145.424,0.000223796L 145.424,17.475L 148.413,17.475L 148.413,20.3848L 139.684,20.3848L 139.684,32.0003L 136.752,32.0003L 136.752,20.3848L 128,20.3848L 128,17.475 Z M 133.774,2.91007L 133.774,17.475L 139.593,17.475L 139.593,2.91007L 133.774,2.91007 Z" />
                    </Path.Data>
                    <Path.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </Path.LayoutTransform>
                </Path>
            </ToggleButton>
        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
            <Trigger SourceName="PinButton" Property="IsChecked" Value="True">
                <Setter TargetName="PinImage" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PinButton" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PinImage" Property="Fill" Value="{StaticResource brush_Focused}"/>
                <!--<Setter TargetName="Text" Property="FontWeight" Value="Bold"/>-->
            </Trigger>
            <Trigger SourceName="Container" Property="IsMouseOver"  Value="True">
                <Setter TargetName="PinButton" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger SourceName="PinButton" Property="IsEnabled"  Value="False">
                <Setter TargetName="PinButton" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="DataTemplate_BrowserViewModel" DataType="{x:Type vm:BrowserViewModel}">
        <DockPanel local:Attached.CurrentViewModel="{Binding}" 
                   local:Attached.PreviousViewModel="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <ToolBar DockPanel.Dock="Top" ItemsSource="{Binding Commands}"
                     ItemTemplateSelector="{StaticResource CommandDataTemplateSelector}"/>
            <Grid DockPanel.Dock="Top">
                <Image Source="{StaticResource icon_Search}" Width="16" Margin="4,0" HorizontalAlignment="Left"/>
                <ComboBox DockPanel.Dock="Top" Margin="24,0,0,0" Text="{Binding Search, Mode=TwoWay}" IsEditable="True" ToolTip="Поиск"
                          ItemsSource="{Binding SearchHistory}"/>
            </Grid>
            <TreeView BorderThickness="0" Name="ViewModelHost" local:Attached.This="{Binding MainControl, Mode=OneWayToSource}"
                      Tag="{Binding}"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Standard">
                <TreeView.ContextMenu>
                    <ContextMenu
                        DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                        local:Attached.CurrentViewModel ="{Binding}"
                        local:Attached.PreviousViewModel ="{Binding Path=PlacementTarget.(local:Attached.PreviousViewModel), RelativeSource={RelativeSource Self}}"
                        ItemsSource="{Binding Commands}"
                        ItemContainerStyleSelector="{StaticResource CommandStyleSelector}"/>
                </TreeView.ContextMenu>
                <TreeViewItem x:Name="FixedsItem"
                              Visibility="{Binding FixedNodesGroupVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ItemTemplate="{StaticResource DataTemplate_Hierarchical}" 
                              ItemsSource="{Binding FixedNodes}"
                              ToolTip="Закрепленные объекты">
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal" Background="Transparent" Margin="1,0">
                            <Image Source="{StaticResource icon_Favorite}" Margin="0,0"/>
                            <TextBlock Text="Избранное" Margin="4,0"/>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
                <TreeViewItem x:Name="RootItem"
                              ItemTemplate="{StaticResource DataTemplate_Hierarchical}"
                              ItemsSource="{Binding Root.Nodes}"
                              ToolTip="{Binding Root.FullName}"
                              ItemContainerStyleSelector="{StaticResource BrowserNodeStyleSelector}">
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal" Background="Transparent" Margin="1,0">
                            <Image Source="{StaticResource icon_ProjectFolder}" Margin="0,0"/>
                            <TextBlock Text="{Binding Root}" Margin="4,0"/>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
            </TreeView>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Root}" Value="{x:Null}">
                <Setter TargetName="RootItem" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FixedNodes.Count}" Value="0">
                <Setter TargetName="FixedsItem" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplate_HierarchicalViewModel" DataType="{x:Type vm:HierarchicalViewModel}">
        <DockPanel>
            <ToolBar DockPanel.Dock="Top" ItemsSource="{Binding Commands}"/>
            <ComboBox DockPanel.Dock="Top" Text="{Binding Search, Mode=TwoWay}" IsEditable="True" ItemsSource="{Binding SearchHistory}"/>
            <TreeView BorderThickness="0" ItemsSource="{Binding Nodes}">
                <TreeView.ContextMenu>
                    <ContextMenu ItemsSource="{Binding Commands}"/>
                </TreeView.ContextMenu>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                        <StackPanel x:Name="Container"  Orientation="Horizontal" Background="Transparent">
                            <Image Source="{Binding Converter={StaticResource TreeNodeIconConverter}}"/>
                            <TextBlock x:Name="Text" Text="{Binding}" Margin="6,0"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="CategoryHeaderTemplate1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <pt:Bitmap Source="{Binding Icon}"/>
            <TextBlock Grid.Column="1" Text="{Binding Header}" Margin="4 0 0 0" FontWeight="Bold"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="CategoryControlTemplate1"  TargetType="{x:Type HeaderedContentControl}">
        <Grid Margin="0 8 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            <Separator Grid.Column="1" Margin="4 3 0 0"/>
            <ContentPresenter Grid.Row="1" Grid.ColumnSpan="2"/>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="dataTemplate_PropertiesViewModel" DataType="{x:Type vm:PropertiesViewModel}">
        <DockPanel Background="{DynamicResource brush_Background}">
            <ToolBar DockPanel.Dock="Top" ItemsSource="{Binding Commands}"/>
            <Grid DockPanel.Dock="Top">
                <Image Source="{Binding Source, Converter={StaticResource TypeIconConverter}}" Height="24" HorizontalAlignment="Left" Margin="3,1" UseLayoutRounding="True"/>
                <ComboBox SelectedValue="{Binding Source}" Margin="30,0,0,0"
                      ItemsSource="{Binding LastSources}"
                      IsReadOnly="True"
                      IsEditable="True"/>
            </Grid>
            <pt:PropertyGrid 
                VirtualizingPanel.VirtualizationMode="Recycling"
                VirtualizingPanel.IsVirtualizing="True"
                TabVisibility="Collapsed"       
                SelectedObject="{Binding Source}" 
                ControlFactory="{StaticResource CustomControlFactory}"
                Operator="{StaticResource CustomOperator}"
                CategoryControlType="Expander">
            </pt:PropertyGrid>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="dataTemplate_MassageListViewModel" DataType="{x:Type vm:MessageListViewModel}">
        <DockPanel Background="{DynamicResource brush_BackgroundContent}">
            <ToolBarTray DockPanel.Dock="Top">
                <ToolBar VerticalContentAlignment="Center" ToolTip="Поиск по тексту">
                    <Image Source="{StaticResource icon_Search}" Width="16" Margin="4,0" ToolBar.OverflowMode="Never"/>
                    <ComboBox IsEditable="True" Text="{Binding Search, Mode=TwoWay}" ItemsSource="{Binding SearchHistory}" Width="200"/>
                </ToolBar>
                <ToolBar VerticalContentAlignment="Center">
                    <ToggleButton IsChecked="{Binding CategoryInfoVisible}" Content="Информация" Style="{StaticResource style_ToggleButton}" BorderBrush="Transparent" Padding="8,2" ToolBar.OverflowMode="Never"/>
                    <ToggleButton IsChecked="{Binding CategoryWarningVisible}" Content="Предупреждения" Style="{StaticResource style_ToggleButton}" BorderBrush="Transparent" Padding="8,2" ToolBar.OverflowMode="Never"/>
                    <ToggleButton IsChecked="{Binding CategoryErrorVisible}" Content="Ошибки" Style="{StaticResource style_ToggleButton}" BorderBrush="Transparent" Padding="8,2" ToolBar.OverflowMode="Never"/>
                </ToolBar>
                <ToolBar VerticalContentAlignment="Center">
                    <Button Command="{Binding ClearAllCommand}" ToolTip="{Binding ClearAllCommand.ToolTip}" Padding="8,2">
                        <Image Height="16"  Source="{Binding ClearAllCommand.Icon}"/>
                    </Button>
                </ToolBar>
            </ToolBarTray>
            <DataGrid IsReadOnly="True" Margin="0" AutoGenerateColumns="False" HeadersVisibility="Column" VirtualizingPanel.VirtualizationMode="Recycling" Padding="2,0,2,2" Background="Transparent"
                      ItemsSource="{Binding CollectionView.View}"
                      SelectedValue="{Binding SelectedItem}"
                      local:Attached.This="{Binding MainControl, Mode=OneWayToSource}"
                      Tag="{Binding}">
                <DataGrid.ContextMenu>
                    <ContextMenu 
                        DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                        local:Attached.CurrentViewModel ="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                        local:Attached.PreviousViewModel ="{Binding Path=PlacementTarget.(local:Attached.PreviousViewModel), RelativeSource={RelativeSource Self}}"
                        ItemsSource="{Binding Path=PlacementTarget.DataContext.ItemCommands, RelativeSource={RelativeSource Self}}"
                        ItemContainerStyleSelector="{StaticResource CommandStyleSelector}"/>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Время" Binding="{Binding TimeString}" CanUserResize="False"/>
                    <DataGridTemplateColumn Width="24" CanUserResize="False">
                        <DataGridTemplateColumn.Header>
                            <Image Width="16" Source="{StaticResource icon_StatusHidden}" ToolTip="Важность"/>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type vm:Message}">
                                <Image Width="16" Source="{Binding Category, Converter={StaticResource MessageCategoryIconConverter}}" HorizontalAlignment="Center"
                                       ToolTip="{Binding Category, Converter={StaticResource MessageCategoryNameConverter}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Текст" Binding="{Binding Text}" Width="*"/>
                    <DataGridTemplateColumn Header="Источник" Width="0.2*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type vm:Message}">
                                <Grid ToolTip="{Binding SourceType, Converter={StaticResource TypeNameConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Margin="4,0" Width="16" Source="{Binding SourceType, Converter={StaticResource TypeIconConverter}}"/>
                                    <TextBlock Grid.Column="1" Margin="4,0" Text="{Binding Source}"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Файл" Width="0.2*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type vm:Message}">
                                <Grid ToolTip="{Binding File, Converter={StaticResource TypeNameConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Margin="4,0" Width="16" Source="{Binding File, Converter={StaticResource TypeIconConverter}}"/>
                                    <TextBlock Grid.Column="1" Margin="4,0" Text="{Binding File}"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </DataTemplate>

    <Style x:Key="style_LayoutItem" TargetType="{x:Type LayoutItem}">
        <Setter Property="Title" Value="{Binding Model.Title}"/>
        <Setter Property="ToolTip" Value="{Binding Model.Title}"/>
        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
        <Setter Property="IsSelected"  Value="{Binding Model.IsSelected}"/>
        <Setter Property="IsActive" Value="{Binding Model.IsActive}"/>
        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
        <Setter Property="Visibility" Value="{Binding Model.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Style>

    <Style x:Key="style_FileViewModelLayoutItem" TargetType="{x:Type LayoutItem}" BasedOn="{StaticResource style_LayoutItem}">
        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
    </Style>

    <Style x:Key="style_TreeViewModelLayoutItem" TargetType="{x:Type LayoutItem}" BasedOn="{StaticResource style_LayoutItem}">
        <Setter Property="Title" Value="{Binding Model.Name}"/>
        <Setter Property="ToolTip" Value="{Binding Model.Name}"/>
    </Style>

    <local:ViewModelDataTemplateSelector x:Key="ViewModelDataTemplateSelector" 
                                         File="{StaticResource DataTemplate_FileViewModel}"
                                         TextFile="{StaticResource DataTemplate_TextFileViewModel}"
                                         OGFFile="{StaticResource DataTemplate_OGFViewModel}"
                                         TextureFile="{StaticResource DataTemplate_TextureViewModel}"
                                         Hierarchical="{StaticResource DataTemplate_HierarchicalViewModel}"
                                         Browser="{StaticResource DataTemplate_BrowserViewModel}"
                                         PropertiesTool="{StaticResource dataTemplate_PropertiesViewModel}"
                                         MessageList="{StaticResource dataTemplate_MassageListViewModel}"/>

    <local:ViewModelStyleSelector x:Key="ViewModelStyleSelector"
                                  File="{StaticResource style_FileViewModelLayoutItem}"
                                  Hierarchical="{StaticResource style_TreeViewModelLayoutItem}"
                                  Default="{StaticResource style_LayoutItem}"/>

</ResourceDictionary>